name: Build Executables
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform_name: windows
            extension: .exe
            path_separator: ";"
          - os: macos-latest
            platform_name: macos
            extension: ''
            path_separator: ":"
          - os: ubuntu-latest
            platform_name: linux
            extension: ''
            path_separator: ":"
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      shell: bash
        
    - name: Install dependencies (Windows & macOS)
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xkb1 libxkbcommon-x11-0
        pip install -r requirements.txt
        
    - name: Install upx (Compression tool)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install upx
      
    - name: Build executable
      run: >
        pyinstaller
        --onefile
        ${{ matrix.os != 'ubuntu-latest' && '--windowed' || '' }}
        --add-data="image${{ matrix.path_separator }}image"
        --name="GOP3bot-${{ matrix.platform_name }}-v${{ env.VERSION }}${{ matrix.extension }}"
        main.py
      shell: bash
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        path: dist/GOP3bot-${{ matrix.platform_name }}-v${{ env.VERSION }}${{ matrix.extension }}
        
    - name: Create Release
      if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        files: dist/GOP3bot-${{ matrix.platform_name }}-v${{ matrix.extension }}${{ env.VERSION }}${{ matrix.extension }}
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}